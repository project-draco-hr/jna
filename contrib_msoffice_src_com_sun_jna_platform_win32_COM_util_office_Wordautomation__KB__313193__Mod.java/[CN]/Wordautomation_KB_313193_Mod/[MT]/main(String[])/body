{
  Ole32.INSTANCE.CoInitializeEx(Pointer.NULL,Ole32.COINIT_MULTITHREADED);
  Factory fact=new Factory();
  try {
    final String oEndOfDoc="\\endofdoc";
    ComWord_Application word=fact.createObject(ComWord_Application.class);
    ComIApplication wordApp=word.queryInterface(ComIApplication.class);
    wordApp.setVisible(true);
    ComIDocument doc=wordApp.getDocuments().Add();
    Helper.sleep(5);
    Paragraph para1=doc.getContent().getParagraphs().Add(VARIANT_MISSING);
    para1.getRange().setText("Heading 1");
    para1.getRange().getFont().setBold(1);
    para1.getFormat().setSpaceAfter(24F);
    para1.getRange().InsertParagraphAfter();
    Paragraph para2=doc.getContent().getParagraphs().Add(doc.getBookmarks().Item(oEndOfDoc).getRange());
    para2.getRange().setText("Heading 2");
    para2.getFormat().setSpaceAfter(6F);
    para2.getRange().InsertParagraphAfter();
    Paragraph para3=doc.getContent().getParagraphs().Add(doc.getBookmarks().Item(oEndOfDoc).getRange());
    para3.getRange().setText("This is a sentence of normal text. Now here is a table:");
    para3.getRange().getFont().setBold(0);
    para3.getFormat().setSpaceAfter(24F);
    para3.getRange().InsertParagraphAfter();
    Table table=doc.getTables().Add(doc.getBookmarks().Item(oEndOfDoc).getRange(),3,5,VARIANT_MISSING,VARIANT_MISSING);
    table.getRange().getParagraphFormat().setSpaceAfter(6F);
    for (int r=1; r <= 3; r++) {
      for (int c=1; c <= 5; c++) {
        String strText="r" + r + "c"+ c;
        table.Cell(r,c).getRange().setText(strText);
      }
    }
    table.getRows().Item(1).getRange().getFont().setBold(1);
    table.getRows().Item(1).getRange().getFont().setItalic(1);
    Paragraph para4=doc.getContent().getParagraphs().Add(doc.getBookmarks().Item(oEndOfDoc).getRange());
    para4.getRange().InsertParagraphBefore();
    para4.getRange().setText("And here's another table:");
    para4.getFormat().setSpaceAfter(24F);
    para4.getRange().InsertParagraphAfter();
    table=doc.getTables().Add(doc.getBookmarks().Item(oEndOfDoc).getRange(),5,2,VARIANT_MISSING,VARIANT_MISSING);
    table.getRange().getParagraphFormat().setSpaceAfter(6F);
    for (int r=1; r <= 5; r++) {
      for (int c=1; c <= 2; c++) {
        String strText="r" + r + "c"+ c;
        table.Cell(r,c).getRange().setText(strText);
      }
    }
    table.getColumns().Item(1).setWidth(wordApp.InchesToPoints(2F));
    table.getColumns().Item(2).setWidth(wordApp.InchesToPoints(3F));
    Range wrdRng;
    float dPos=wordApp.InchesToPoints(7F);
    doc.getBookmarks().Item(oEndOfDoc).getRange().InsertParagraphAfter();
    do {
      wrdRng=doc.getBookmarks().Item(oEndOfDoc).getRange();
      wrdRng.getParagraphFormat().setSpaceAfter(6F);
      wrdRng.InsertAfter("A line of text");
      wrdRng.InsertParagraphAfter();
    }
 while (dPos >= (Float)wrdRng.getInformation(WdInformation.wdVerticalPositionRelativeToPage));
    wrdRng.Collapse(WdCollapseDirection.wdCollapseEnd);
    wrdRng.InsertBreak(WdBreakType.wdPageBreak);
    wrdRng.Collapse(WdCollapseDirection.wdCollapseEnd);
    wrdRng.InsertAfter("We're now on page 2. Here's my chart:");
    wrdRng.InsertParagraphAfter();
    InlineShape oShape=doc.getBookmarks().Item(oEndOfDoc).getRange().getInlineShapes().AddOLEObject("MSGraph.Chart.8","",Boolean.FALSE,Boolean.FALSE,VARIANT_MISSING,VARIANT_MISSING,VARIANT_MISSING,VARIANT_MISSING);
    IDispatch oChart=oShape.getOLEFormat().getObject();
    IDispatch oChartApp=oChart.getProperty(IDispatch.class,"Application");
    oChart.setProperty("ChartType",XlChartType.xlLine.getValue());
    oChartApp.invokeMethod(Void.class,"Update");
    oChartApp.invokeMethod(Void.class,"Quit");
    oShape.setWidth(wordApp.InchesToPoints(6.25f));
    oShape.setHeight(wordApp.InchesToPoints(3.57f));
    wrdRng=doc.getBookmarks().Item(oEndOfDoc).getRange();
    wrdRng.InsertParagraphAfter();
    wrdRng.InsertAfter("THE END.");
    File tempFile=Helper.createNotExistingFile("KB_313193_",".pdf");
    doc.ExportAsFixedFormat(tempFile.getAbsolutePath(),WdExportFormat.wdExportFormatPDF,Boolean.FALSE,WdExportOptimizeFor.wdExportOptimizeForOnScreen,WdExportRange.wdExportAllDocument,null,null,WdExportItem.wdExportDocumentContent,Boolean.FALSE,Boolean.TRUE,WdExportCreateBookmarks.wdExportCreateNoBookmarks,Boolean.TRUE,Boolean.FALSE,Boolean.TRUE,VARIANT_MISSING);
    System.out.println("Output written to: " + tempFile.getAbsolutePath());
    doc.Close(WdSaveOptions.wdDoNotSaveChanges,VARIANT_MISSING,VARIANT_MISSING);
    wordApp.Quit();
  }
  finally {
    fact.disposeAll();
    Ole32.INSTANCE.CoUninitialize();
  }
}
