{
  List flist=getFieldList();
  Set names=new HashSet();
  for (Iterator i=flist.iterator(); i.hasNext(); ) {
    names.add(((Field)i.next()).getName());
  }
  List fieldOrder=getFieldOrder();
  if (fieldOrder.size() < flist.size()) {
    if (force) {
      if (REQUIRES_EXPLICIT_FIELD_ORDER) {
        throw new Error("This VM does not store fields in a predictable order; you must use Structure.setFieldOrder on " + getClass() + " to explicitly indicate the field order: "+ System.getProperty("java.vendor")+ ", "+ System.getProperty("java.version"));
      }
      fieldOrder=new ArrayList(names);
    }
 else {
      return null;
    }
  }
  Set orderedNames=new HashSet(fieldOrder);
  if (!orderedNames.equals(names)) {
    throw new Error("The names declared in setFieldOrder (" + orderedNames + ") in "+ getClass()+ " do not match declared field names ("+ names+ ")");
  }
  sortFields(flist,fieldOrder);
  return flist;
}
