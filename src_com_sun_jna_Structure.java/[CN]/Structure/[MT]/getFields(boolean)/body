{
  List flist=getFieldList();
  Set names=new HashSet();
  for (Iterator i=flist.iterator(); i.hasNext(); ) {
    names.add(((Field)i.next()).getName());
  }
  List fieldOrder=fieldOrder();
  if (fieldOrder.size() != flist.size() && flist.size() > 1) {
    if (force) {
      throw new Error("Structure.getFieldOrder() on " + getClass() + " does not provide enough names ("+ sort(fieldOrder)+ ") to match declared fields ("+ sort(names)+ ")");
    }
    return null;
  }
  Set orderedNames=new HashSet(fieldOrder);
  if (!orderedNames.equals(names)) {
    throw new Error("Structure.getFieldOrder() on " + getClass() + " returns names ("+ sort(fieldOrder)+ ") which do not match declared field names ("+ sort(names)+ ")");
  }
  sortFields(flist,fieldOrder);
  return flist;
}
