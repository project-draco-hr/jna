{
  int offset=structField.offset;
  Class fieldType=structField.type;
  FromNativeConverter readConverter=structField.readConverter;
  if (readConverter != null) {
    fieldType=readConverter.nativeType();
  }
  Object currentValue=(Structure.class.isAssignableFrom(fieldType) || Callback.class.isAssignableFrom(fieldType) || (Platform.HAS_BUFFERS && Buffer.class.isAssignableFrom(fieldType))|| Pointer.class.isAssignableFrom(fieldType)|| NativeMapped.class.isAssignableFrom(fieldType)|| fieldType.isArray()) ? getField(structField) : null;
  Object result=memory.getValue(offset,fieldType,currentValue);
  if (readConverter != null) {
    result=readConverter.fromNative(result,structField.context);
  }
  if (fieldType.equals(String.class) || fieldType.equals(WString.class)) {
    nativeStrings.put(structField.name + ".ptr",memory.getPointer(offset));
    nativeStrings.put(structField.name + ".val",result);
  }
  setField(structField,result,true);
  return result;
}
