{
  try {
    this.typeLibUtil=new TypeLibUtil(TYPELIB_ID_SHELL,1,0);
    this.createDir();
    for (int i=0; i < typeLibUtil.getTypeInfoCount(); ++i) {
      TYPEKIND typekind=typeLibUtil.getTypeInfoType(i);
      if (typekind.value == TYPEKIND.TKIND_ENUM) {
        this.createCOMEnum(i,this.getPackageName(),typeLibUtil);
      }
 else       if (typekind.value == TYPEKIND.TKIND_RECORD) {
        System.out.println("'TKIND_RECORD' objects are currently not supported!");
      }
 else       if (typekind.value == TYPEKIND.TKIND_MODULE) {
        System.out.println("'TKIND_MODULE' objects are currently not supported!");
      }
 else       if (typekind.value == TYPEKIND.TKIND_INTERFACE) {
        this.createCOMInterface(i,this.getPackageName(),typeLibUtil);
      }
 else       if (typekind.value == TYPEKIND.TKIND_DISPATCH) {
        this.createCOMDispInterface(i,this.getPackageName(),typeLibUtil);
      }
 else       if (typekind.value == TYPEKIND.TKIND_COCLASS) {
        this.createCOMCoClass(i,this.getPackageName(),typeLibUtil);
      }
 else       if (typekind.value == TYPEKIND.TKIND_ALIAS) {
        System.out.println("'TKIND_ALIAS' objects are currently not supported!");
      }
 else       if (typekind.value == TYPEKIND.TKIND_UNION) {
        System.out.println("'TKIND_UNION' objects are currently not supported!");
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
