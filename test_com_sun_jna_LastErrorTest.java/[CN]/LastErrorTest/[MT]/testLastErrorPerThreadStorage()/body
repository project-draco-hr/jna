{
  final TestLibrary lib=Native.loadLibrary("testlib",TestLibrary.class);
  final int NTHREADS=100;
  final int[] errors=new int[NTHREADS];
  Set<Thread> threads=new HashSet<Thread>();
  for (int i=0; i < NTHREADS; i++) {
    final int idx=i;
    Thread t=new Thread(){
      @Override public void run(){
        lib.setLastError(-idx - 1);
        errors[idx]=Native.getLastError();
      }
    }
;
    threads.add(t);
  }
  int EXPECTED=42;
  lib.setLastError(EXPECTED);
  assertEquals("Wrong error on main thread (immediate)",EXPECTED,Native.getLastError());
  for (  Thread t : threads) {
    t.start();
  }
  for (  Thread t : threads) {
    t.join();
  }
  assertEquals("Wrong error on main thread",EXPECTED,Native.getLastError());
  for (int i=0; i < threads.size(); i++) {
    assertEquals("Wrong error on thread " + i,-i - 1,errors[i]);
  }
}
