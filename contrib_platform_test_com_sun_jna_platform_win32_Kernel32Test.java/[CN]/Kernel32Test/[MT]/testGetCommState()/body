{
  WinBase.DCB lpDCB=new WinBase.DCB();
  HANDLE handleSerialPort=Kernel32.INSTANCE.CreateFile("\\\\.\\comDummy",WinNT.GENERIC_READ | WinNT.GENERIC_WRITE,0,null,WinNT.OPEN_EXISTING,WinNT.FILE_ATTRIBUTE_NORMAL,null);
  int lastError=Kernel32.INSTANCE.GetLastError();
  assertEquals(lastError,WinNT.ERROR_FILE_NOT_FOUND);
  assertFalse(Kernel32.INSTANCE.GetCommState(handleSerialPort,lpDCB));
  handleSerialPort=Kernel32.INSTANCE.CreateFile("\\\\.\\com1",WinNT.GENERIC_READ | WinNT.GENERIC_WRITE,0,null,WinNT.OPEN_EXISTING,WinNT.FILE_ATTRIBUTE_NORMAL,null);
  lastError=Kernel32.INSTANCE.GetLastError();
  if (WinNT.NO_ERROR == lastError) {
    assertFalse(WinNT.INVALID_HANDLE_VALUE.equals(handleSerialPort));
    try {
      lpDCB=new WinBase.DCB();
      assertTrue(Kernel32.INSTANCE.GetCommState(handleSerialPort,lpDCB));
switch (lpDCB.BaudRate.intValue()) {
case WinBase.CBR_110:
case WinBase.CBR_1200:
case WinBase.CBR_128000:
case WinBase.CBR_14400:
case WinBase.CBR_19200:
case WinBase.CBR_2400:
case WinBase.CBR_256000:
case WinBase.CBR_300:
case WinBase.CBR_38400:
case WinBase.CBR_4800:
case WinBase.CBR_56000:
case WinBase.CBR_600:
case WinBase.CBR_9600:
        break;
default :
      fail("Received value of WinBase.DCB.BaudRate is not valid");
  }
}
  finally {
  Kernel32.INSTANCE.CloseHandle(handleSerialPort);
}
}
}
