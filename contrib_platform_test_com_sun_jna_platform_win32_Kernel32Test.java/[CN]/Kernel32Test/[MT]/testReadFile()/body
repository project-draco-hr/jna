{
  String expected="jna - testReadFile";
  File tmp=File.createTempFile("testReadFile","jna");
  tmp.deleteOnExit();
  FileWriter fw=new FileWriter(tmp);
  try {
    fw.append(expected);
  }
  finally {
    fw.close();
  }
  HANDLE hFile=Kernel32.INSTANCE.CreateFile(tmp.getAbsolutePath(),WinNT.GENERIC_READ,WinNT.FILE_SHARE_READ,new WinBase.SECURITY_ATTRIBUTES(),WinNT.OPEN_EXISTING,WinNT.FILE_ATTRIBUTE_NORMAL,null);
  assertFalse("Failed to create file handle: " + tmp,WinBase.INVALID_HANDLE_VALUE.equals(hFile));
  try {
    byte[] readBuffer=new byte[expected.length() + Byte.MAX_VALUE];
    IntByReference lpNumberOfBytesRead=new IntByReference(0);
    assertTrue("Failed to read from file",Kernel32.INSTANCE.ReadFile(hFile,readBuffer,readBuffer.length,lpNumberOfBytesRead,null));
    int read=lpNumberOfBytesRead.getValue();
    assertEquals("Mismatched read size",expected.length(),read);
    assertEquals("Mismatched read content",expected,new String(readBuffer,0,read));
  }
  finally {
    assertTrue("Failed to close file",Kernel32.INSTANCE.CloseHandle(hFile));
  }
}
