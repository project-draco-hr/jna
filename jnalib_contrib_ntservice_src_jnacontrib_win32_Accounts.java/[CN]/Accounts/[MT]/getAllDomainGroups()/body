{
  Netapi32 netapi32;
  PointerByReference gbuf;
  IntByReference gentriesread;
  IntByReference gtotalentries;
  Netapi32.GROUP_INFO_0 ggroup;
  Structure[] ggroups;
  TreeSet<String> domainGroups;
  int i;
  netapi32=Netapi32.INSTANCE;
  domainGroups=new TreeSet<String>(String.CASE_INSENSITIVE_ORDER);
  gbuf=new PointerByReference();
  gentriesread=new IntByReference();
  gtotalentries=new IntByReference();
  if (netapi32.NetGroupEnum(getDomainControllerName(),0,gbuf,LMCONS.MAX_PREFERRED_LENGTH,gentriesread,gtotalentries,null) == LMERR.NERR_Success) {
    ggroup=new Netapi32.GROUP_INFO_0(gbuf.getValue());
    ggroups=ggroup.toArray(gentriesread.getValue());
    for (i=0; i < gentriesread.getValue(); i++) {
      ggroup=(Netapi32.GROUP_INFO_0)ggroups[i];
      domainGroups.add(ggroup.grpi0_name);
    }
    if (gentriesread.getValue() > 0) {
      netapi32.NetApiBufferFree(gbuf.getValue());
    }
  }
  return (domainGroups);
}
