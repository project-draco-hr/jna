{
  Map options=new HashMap();
  options.put(Library.OPTION_CLASSLOADER,new DisfunctClassLoader());
  int previousTempFileCount=Native.getTempDir().listFiles().length;
  try {
    NativeLibrary.getInstance("disfunct",options);
    fail("Expected NativeLibrary.getInstance() to fail with an UnsatisfiedLinkError here.");
  }
 catch (  UnsatisfiedLinkError e) {
    int currentTempFileCount=Native.getTempDir().listFiles().length;
    assertEquals("Extracted native library should be cleaned up again. Number of files in temp directory:",previousTempFileCount,currentTempFileCount);
  }
}
