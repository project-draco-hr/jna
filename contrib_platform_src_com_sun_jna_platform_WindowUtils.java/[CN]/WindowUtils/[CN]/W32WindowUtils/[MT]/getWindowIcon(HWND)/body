{
  final DWORDByReference hIconNumber=new DWORDByReference();
  LRESULT result=User32.INSTANCE.SendMessageTimeout(hwnd,WinUser.WM_GETICON,new WPARAM(WinUser.ICON_BIG),new LPARAM(0),WinUser.SMTO_ABORTIFHUNG,500,hIconNumber);
  if (result.intValue() == 0)   result=User32.INSTANCE.SendMessageTimeout(hwnd,WinUser.WM_GETICON,new WPARAM(WinUser.ICON_SMALL),new LPARAM(0),WinUser.SMTO_ABORTIFHUNG,500,hIconNumber);
  if (result.intValue() == 0)   result=User32.INSTANCE.SendMessageTimeout(hwnd,WinUser.WM_GETICON,new WPARAM(WinUser.ICON_SMALL2),new LPARAM(0),WinUser.SMTO_ABORTIFHUNG,500,hIconNumber);
  if (result.intValue() == 0) {
    result=new LRESULT(User32.INSTANCE.GetClassLongPtr(hwnd,WinUser.GCLP_HICON).intValue());
    hIconNumber.getValue().setValue(result.intValue());
  }
  if (result.intValue() == 0) {
    result=new LRESULT(User32.INSTANCE.GetClassLongPtr(hwnd,WinUser.GCLP_HICONSM).intValue());
    hIconNumber.getValue().setValue(result.intValue());
  }
  if (result.intValue() == 0)   return null;
  final HICON hIcon=new HICON(new Pointer(hIconNumber.getValue().longValue()));
  final Dimension iconSize=getIconSize(hIcon);
  if (iconSize.width == 0 || iconSize.height == 0)   return null;
  final int width=iconSize.width;
  final int height=iconSize.height;
  final short depth=24;
  final byte[] lpBitsColor=new byte[width * height * depth / 8];
  final Pointer lpBitsColorPtr=new Memory(lpBitsColor.length);
  final byte[] lpBitsMask=new byte[width * height * depth / 8];
  final Pointer lpBitsMaskPtr=new Memory(lpBitsMask.length);
  final BITMAPINFO bitmapInfo=new BITMAPINFO();
  final BITMAPINFOHEADER hdr=new BITMAPINFOHEADER();
  bitmapInfo.bmiHeader=hdr;
  hdr.biWidth=width;
  hdr.biHeight=height;
  hdr.biPlanes=1;
  hdr.biBitCount=depth;
  hdr.biCompression=0;
  hdr.write();
  bitmapInfo.write();
  final HDC hDC=User32.INSTANCE.GetDC(null);
  final ICONINFO iconInfo=new ICONINFO();
  User32.INSTANCE.GetIconInfo(hIcon,iconInfo);
  iconInfo.read();
  GDI32.INSTANCE.GetDIBits(hDC,iconInfo.hbmColor,0,height,lpBitsColorPtr,bitmapInfo,0);
  lpBitsColorPtr.read(0,lpBitsColor,0,lpBitsColor.length);
  GDI32.INSTANCE.GetDIBits(hDC,iconInfo.hbmMask,0,height,lpBitsMaskPtr,bitmapInfo,0);
  lpBitsMaskPtr.read(0,lpBitsMask,0,lpBitsMask.length);
  final BufferedImage image=new BufferedImage(width,height,BufferedImage.TYPE_INT_ARGB);
  int r, g, b, a, argb;
  int x=0, y=height - 1;
  for (int i=0; i < lpBitsColor.length; i=i + 3) {
    b=lpBitsColor[i] & 0xFF;
    g=lpBitsColor[i + 1] & 0xFF;
    r=lpBitsColor[i + 2] & 0xFF;
    a=0xFF - lpBitsMask[i] & 0xFF;
    argb=(a << 24) | (r << 16) | (g << 8)| b;
    image.setRGB(x,y,argb);
    x=(x + 1) % width;
    if (x == 0)     y--;
  }
  User32.INSTANCE.ReleaseDC(null,hDC);
  return image;
}
