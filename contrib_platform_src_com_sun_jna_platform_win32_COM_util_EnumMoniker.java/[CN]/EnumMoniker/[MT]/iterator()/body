{
  return new Iterator<IDispatch>(){
    @Override public boolean hasNext(){
      return null != EnumMoniker.this.rawNext;
    }
    @Override public IDispatch next(){
      try {
        final Moniker moniker=EnumMoniker.this.rawNext;
        final PointerByReference ppunkObject=new PointerByReference();
        WinNT.HRESULT hr=EnumMoniker.this.comThread.execute(new Callable<WinNT.HRESULT>(){
          @Override public WinNT.HRESULT call() throws Exception {
            return EnumMoniker.this.rawRot.GetObject(moniker.getPointer(),ppunkObject);
          }
        }
);
        COMUtils.checkRC(hr);
        Dispatch dispatch=new Dispatch(ppunkObject.getValue());
        EnumMoniker.this.cacheNext();
        IDispatch d=EnumMoniker.this.factory.createProxy(IDispatch.class,dispatch);
        int n=dispatch.Release();
        return d;
      }
 catch (      InterruptedException e) {
        throw new RuntimeException(e);
      }
catch (      ExecutionException e) {
        throw new RuntimeException(e);
      }
catch (      TimeoutException e) {
        throw new RuntimeException(e);
      }
    }
    @Override public void remove(){
      throw new UnsupportedOperationException("remove");
    }
  }
;
}
