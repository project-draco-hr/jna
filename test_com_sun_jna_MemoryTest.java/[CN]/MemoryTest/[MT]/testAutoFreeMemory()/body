{
  final boolean[] flag={false};
  Memory core=new Memory(10){
    @Override protected void finalize(){
      super.finalize();
      flag[0]=true;
    }
  }
;
  Pointer shared=core.share(0,5);
  Reference<Memory> ref=new WeakReference<Memory>(core);
  core=null;
  System.gc();
  assertFalse("Memory prematurely GC'd",flag[0]);
  assertNotNull("Base memory GC'd while shared memory extant",ref.get());
  shared.setInt(0,0);
  shared=null;
  long start=System.currentTimeMillis();
  System.gc();
  Memory.purge();
  for (int i=0; i < GC_WAITS && ref.get() != null; i++) {
    Thread.sleep(GC_WAIT_INTERVAL);
    System.gc();
    Memory.purge();
  }
  long end=System.currentTimeMillis();
  assertNull("Memory not GC'd after " + (end - start) + " millis",ref.get());
}
