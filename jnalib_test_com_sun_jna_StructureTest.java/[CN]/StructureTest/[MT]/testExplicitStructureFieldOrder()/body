{
  final String[] ORDER=new String[]{"one","two","three"};
  final String[] ORDER2=new String[]{"one","two","three","four"};
class TestStructure extends Structure {
    public int one=1;
    public int three=3;
    public int two=2;
{
      setFieldOrder(ORDER);
    }
    public List getFieldOrder(){
      return super.getFieldOrder();
    }
  }
class DerivedTestStructure extends TestStructure {
    public int four=4;
{
      setFieldOrder(new String[]{"four"});
    }
  }
  TestStructure s=new TestStructure();
  assertEquals("Wrong field order",Arrays.asList(ORDER),s.getFieldOrder());
  s.write();
  assertEquals("Wrong first field: " + s,s.one,s.getPointer().getInt(0));
  assertEquals("Wrong second field: " + s,s.two,s.getPointer().getInt(4));
  assertEquals("Wrong third field: " + s,s.three,s.getPointer().getInt(8));
  DerivedTestStructure s2=new DerivedTestStructure();
  assertEquals("Wrong field order",Arrays.asList(ORDER2),s2.getFieldOrder());
  s2.write();
  assertEquals("Wrong first field: " + s2,s2.one,s2.getPointer().getInt(0));
  assertEquals("Wrong second field: " + s2,s2.two,s2.getPointer().getInt(4));
  assertEquals("Wrong third field: " + s2,s2.three,s2.getPointer().getInt(8));
  assertEquals("Wrong derived field: " + s2,s2.four,s2.getPointer().getInt(12));
}
