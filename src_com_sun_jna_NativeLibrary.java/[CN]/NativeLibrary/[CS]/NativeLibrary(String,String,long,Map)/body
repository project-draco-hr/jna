{
  this.libraryName=getLibraryName(libraryName);
  this.libraryPath=libraryPath;
  this.handle=handle;
  Object option=options.get(Library.OPTION_CALLING_CONVENTION);
  int callingConvention=option instanceof Number ? ((Number)option).intValue() : Function.C_CONVENTION;
  this.callFlags=callingConvention;
  this.options=options;
  this.encoding=(String)options.get(Library.OPTION_STRING_ENCODING);
  if (this.encoding == null) {
    this.encoding=Native.getDefaultStringEncoding();
  }
  if (Platform.isWindows() && "kernel32".equals(this.libraryName.toLowerCase())) {
synchronized (functions) {
      Function f=new Function(this,"GetLastError",Function.ALT_CONVENTION,encoding){
        Object invoke(        Object[] args,        Class returnType,        boolean b){
          return new Integer(Native.getLastError());
        }
      }
;
      functions.put(functionKey("GetLastError",callFlags,encoding),f);
    }
  }
}
