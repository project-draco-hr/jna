{
  List searchPath=new LinkedList();
  String webstartPath=Native.getWebStartLibraryPath(libraryName);
  if (webstartPath != null) {
    searchPath.add(webstartPath);
  }
  List customPaths=(List)searchPaths.get(libraryName);
  if (customPaths != null) {
synchronized (customPaths) {
      searchPath.addAll(0,customPaths);
    }
  }
  searchPath.addAll(initPaths("jna.library.path"));
  String libraryPath=findLibraryPath(libraryName,searchPath);
  long handle=0;
  try {
    handle=Native.open(libraryPath);
  }
 catch (  UnsatisfiedLinkError e) {
    searchPath.addAll(librarySearchPath);
  }
  try {
    if (handle == 0) {
      libraryPath=findLibraryPath(libraryName,searchPath);
      handle=Native.open(libraryPath);
      if (handle == 0) {
        throw new UnsatisfiedLinkError("Failed to load library '" + libraryName + "'");
      }
    }
  }
 catch (  UnsatisfiedLinkError e) {
    if (Platform.isAndroid()) {
      try {
        System.loadLibrary(libraryName);
        handle=Native.open(libraryPath);
      }
 catch (      UnsatisfiedLinkError e2) {
        e=e2;
      }
    }
 else     if (Platform.isLinux()) {
      libraryPath=matchLibrary(libraryName,searchPath);
      if (libraryPath != null) {
        try {
          handle=Native.open(libraryPath);
        }
 catch (        UnsatisfiedLinkError e2) {
          e=e2;
        }
      }
    }
 else     if (Platform.isMac() && !libraryName.endsWith(".dylib")) {
      libraryPath=matchFramework(libraryName);
      if (libraryPath != null) {
        try {
          handle=Native.open(libraryPath);
        }
 catch (        UnsatisfiedLinkError e2) {
          e=e2;
        }
      }
    }
 else     if (Platform.isWindows()) {
      libraryPath=findLibraryPath("lib" + libraryName,searchPath);
      try {
        handle=Native.open(libraryPath);
      }
 catch (      UnsatisfiedLinkError e2) {
        e=e2;
      }
    }
    if (handle == 0) {
      throw new UnsatisfiedLinkError("Unable to load library '" + libraryName + "': "+ e.getMessage());
    }
  }
  return new NativeLibrary(libraryName,libraryPath,handle,options);
}
