{
  File lib=new File(libName);
  if (lib.isAbsolute()) {
    searchPath=Arrays.asList(lib.getParent());
  }
  FilenameFilter filter=new FilenameFilter(){
    @Override public boolean accept(    File dir,    String filename){
      return (filename.startsWith("lib" + libName + ".so") || (filename.startsWith(libName + ".so") && libName.startsWith("lib"))) && isVersionedName(filename);
    }
  }
;
  Collection<File> matches=new LinkedList<File>();
  for (  String path : searchPath) {
    File[] files=new File(path).listFiles(filter);
    if (files != null && files.length > 0) {
      matches.addAll(Arrays.asList(files));
    }
  }
  double bestVersion=-1;
  String bestMatch=null;
  for (  File f : matches) {
    String path=f.getAbsolutePath();
    String ver=path.substring(path.lastIndexOf(".so.") + 4);
    double version=parseVersion(ver);
    if (version > bestVersion) {
      bestVersion=version;
      bestMatch=path;
    }
  }
  return bestMatch;
}
