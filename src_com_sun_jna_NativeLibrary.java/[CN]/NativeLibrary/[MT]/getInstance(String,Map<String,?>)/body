{
  Map<String,Object> options=new HashMap<String,Object>(libraryOptions);
  if (options.get(Library.OPTION_CALLING_CONVENTION) == null) {
    options.put(Library.OPTION_CALLING_CONVENTION,Integer.valueOf(Function.C_CONVENTION));
  }
  if ((Platform.isLinux() || Platform.isFreeBSD() || Platform.isAIX()) && Platform.C_LIBRARY_NAME.equals(libraryName)) {
    libraryName=null;
  }
synchronized (libraries) {
    Reference<NativeLibrary> ref=libraries.get(libraryName + options);
    NativeLibrary library=(ref != null) ? ref.get() : null;
    if (library == null) {
      if (libraryName == null) {
        library=new NativeLibrary("<process>",null,Native.open(null,openFlags(options)),options);
      }
 else {
        library=loadLibrary(libraryName,options);
      }
      ref=new WeakReference<NativeLibrary>(library);
      libraries.put(library.getName() + options,ref);
      File file=library.getFile();
      if (file != null) {
        libraries.put(file.getAbsolutePath() + options,ref);
        libraries.put(file.getName() + options,ref);
      }
    }
    return library;
  }
}
