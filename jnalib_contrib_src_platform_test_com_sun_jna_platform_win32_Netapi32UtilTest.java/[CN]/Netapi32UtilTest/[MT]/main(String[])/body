{
  junit.textui.TestRunner.run(Netapi32UtilTest.class);
  System.out.println("Domain: " + Netapi32Util.getDomainName("localhost"));
  Netapi32Util.LocalGroup[] localGroups=Netapi32Util.getLocalGroups();
  System.out.println("Local groups: " + localGroups.length);
  for (  Netapi32Util.LocalGroup localGroup : localGroups) {
    System.out.println(" " + localGroup.name + " ("+ localGroup.comment+ ")");
  }
  Netapi32Util.Group[] groups=Netapi32Util.getGlobalGroups();
  System.out.println("Global groups: " + groups.length);
  for (  Netapi32Util.Group group : groups) {
    System.out.println(" " + group.name);
  }
  Netapi32Util.User[] users=Netapi32Util.getUsers();
  System.out.println("Users: " + users.length);
  for (  Netapi32Util.User user : users) {
    System.out.println(" " + user.name);
  }
  Netapi32Util.Group[] userLocalGroups=Netapi32Util.getCurrentUserLocalGroups();
  System.out.println("Local user groups: " + userLocalGroups.length);
  for (  Netapi32Util.Group localGroup : userLocalGroups) {
    System.out.println(" " + localGroup.name);
  }
  if (Netapi32Util.getJoinStatus() == LMJoin.NETSETUP_JOIN_STATUS.NetSetupDomainName) {
    System.out.println("Pdc: " + Netapi32Util.getDCName());
    DomainController dc=Netapi32Util.getDC();
    System.out.println("Domain controller:");
    System.out.println("    name: " + dc.name);
    System.out.println(" address: " + dc.address);
    System.out.println("  domain: " + dc.domainName);
    System.out.println("    site: " + dc.clientSiteName);
    System.out.println("  forest: " + dc.dnsForestName);
    System.out.println("    guid: " + Ole32Util.getStringFromGUID(dc.domainGuid));
  }
  if (Netapi32Util.getJoinStatus() == LMJoin.NETSETUP_JOIN_STATUS.NetSetupDomainName) {
    DomainTrust[] trusts=Netapi32Util.getDomainTrusts();
    System.out.println("Domain trusts: (" + trusts.length + ")");
    for (    DomainTrust trust : trusts) {
      System.out.println(" " + trust.NetbiosDomainName + ": "+ trust.DnsDomainName+ " ("+ trust.DomainSidString+ ")");
    }
  }
}
