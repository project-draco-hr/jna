{
  int dimIdx=currentIdx.length;
  int[] subIdx=new int[currentIdx.length + 1];
  System.arraycopy(currentIdx,0,subIdx,0,dimIdx);
  for (int i=minIdx[dimIdx]; i <= maxIdx[dimIdx]; i++) {
    subIdx[dimIdx]=i;
    if (dimIdx == (minIdx.length - 1)) {
      int offset=0;
      for (int j=0; j < dimIdx; j++) {
        offset+=cumElements[j] * currentIdx[j];
      }
      offset+=subIdx[dimIdx] - minIdx[dimIdx];
      int targetPos=subIdx[dimIdx] - minIdx[dimIdx];
switch (varType) {
case VT_BOOL:
        Array.set(targetArray,targetPos,Array.getShort(dataArray,offset) != 0);
      break;
case VT_UI1:
case VT_I1:
    Array.set(targetArray,targetPos,Array.getByte(dataArray,offset));
  break;
case VT_UI2:
case VT_I2:
Array.set(targetArray,targetPos,Array.getShort(dataArray,offset));
break;
case VT_UI4:
case VT_UINT:
case VT_I4:
case VT_INT:
Array.set(targetArray,targetPos,Array.getInt(dataArray,offset));
break;
case VT_ERROR:
Array.set(targetArray,targetPos,new SCODE(Array.getInt(dataArray,offset)));
break;
case VT_R4:
Array.set(targetArray,targetPos,Array.getFloat(dataArray,offset));
break;
case VT_R8:
Array.set(targetArray,targetPos,Array.getDouble(dataArray,offset));
break;
case VT_DATE:
Array.set(targetArray,targetPos,new DATE(Array.getDouble(dataArray,offset)).getAsJavaDate());
break;
case VT_BSTR:
Array.set(targetArray,targetPos,new BSTR((Pointer)Array.get(dataArray,offset)).getValue());
break;
case VT_VARIANT:
VARIANT holder=(VARIANT)Array.get(dataArray,offset);
switch (holder.getVarType().intValue()) {
case VT_NULL:
case VT_EMPTY:
Array.set(targetArray,targetPos,null);
break;
case VT_BOOL:
Array.set(targetArray,targetPos,holder.booleanValue());
break;
case VT_UI1:
case VT_I1:
Array.set(targetArray,targetPos,holder.byteValue());
break;
case VT_UI2:
case VT_I2:
Array.set(targetArray,targetPos,holder.shortValue());
break;
case VT_UI4:
case VT_UINT:
case VT_I4:
case VT_INT:
Array.set(targetArray,targetPos,holder.intValue());
break;
case VT_ERROR:
Array.set(targetArray,targetPos,new SCODE(holder.intValue()));
break;
case VT_R4:
Array.set(targetArray,targetPos,holder.floatValue());
break;
case VT_R8:
Array.set(targetArray,targetPos,holder.doubleValue());
break;
case VT_DATE:
Array.set(targetArray,targetPos,holder.dateValue());
break;
case VT_BSTR:
Array.set(targetArray,targetPos,holder.stringValue());
break;
default :
throw new IllegalStateException("Type not supported: " + holder.getVarType().intValue());
}
break;
case VT_UNKNOWN:
case VT_DISPATCH:
case VT_CY:
case VT_DECIMAL:
case VT_RECORD:
default :
throw new IllegalStateException("Type not supported: " + varType);
}
}
 else {
toPrimitiveArray(dataArray,Array.get(targetArray,i),minIdx,maxIdx,elements,cumElements,varType,subIdx);
}
}
}
