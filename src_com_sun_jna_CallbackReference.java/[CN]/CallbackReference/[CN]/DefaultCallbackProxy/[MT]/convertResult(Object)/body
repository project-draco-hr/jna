{
  if (toNative != null) {
    value=toNative.toNative(value,new CallbackResultContext(callbackMethod));
  }
  if (value == null)   return null;
  Class cls=value.getClass();
  if (Structure.class.isAssignableFrom(cls)) {
    if (Structure.ByValue.class.isAssignableFrom(cls)) {
      return value;
    }
    return ((Structure)value).getPointer();
  }
 else   if (cls == boolean.class || cls == Boolean.class) {
    return Boolean.TRUE.equals(value) ? Function.INTEGER_TRUE : Function.INTEGER_FALSE;
  }
 else   if (cls == String.class || cls == WString.class) {
    return getNativeString(value,cls == WString.class);
  }
 else   if (cls == String[].class || cls == WString.class) {
    StringArray sa=cls == String[].class ? new StringArray((String[])value,encoding) : new StringArray((WString[])value);
    allocations.put(value,sa);
    return sa;
  }
 else   if (Callback.class.isAssignableFrom(cls)) {
    return getFunctionPointer((Callback)value);
  }
  return value;
}
