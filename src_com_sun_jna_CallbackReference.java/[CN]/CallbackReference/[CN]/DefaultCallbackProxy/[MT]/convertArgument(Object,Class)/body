{
  if (value instanceof Pointer) {
    if (dstType == String.class) {
      value=((Pointer)value).getString(0);
    }
 else     if (dstType == WString.class) {
      value=new WString(((Pointer)value).getString(0,true));
    }
 else     if (dstType == String[].class || dstType == WString[].class) {
      value=((Pointer)value).getStringArray(0,dstType == WString[].class);
    }
 else     if (Callback.class.isAssignableFrom(dstType)) {
      value=CallbackReference.this.getCallback(dstType,(Pointer)value);
    }
 else     if (Structure.class.isAssignableFrom(dstType)) {
      if (Structure.ByValue.class.isAssignableFrom(dstType)) {
        Structure s=Structure.newInstance(dstType);
        byte[] buf=new byte[s.size()];
        ((Pointer)value).read(0,buf,0,buf.length);
        s.getPointer().write(0,buf,0,buf.length);
        s.read();
        value=s;
      }
 else {
        Structure s=Structure.newInstance(dstType,(Pointer)value);
        s.conditionalRead();
        value=s;
      }
    }
  }
 else   if ((boolean.class == dstType || Boolean.class == dstType) && value instanceof Number) {
    value=Function.valueOf(((Number)value).intValue() != 0);
  }
  return value;
}
