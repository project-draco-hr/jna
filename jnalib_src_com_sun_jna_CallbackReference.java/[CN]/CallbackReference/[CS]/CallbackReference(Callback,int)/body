{
  super(callback);
  TypeMapper mapper=Native.getTypeMapper(Native.findCallbackClass(callback.getClass()));
  if (callback instanceof CallbackProxy) {
    proxy=(CallbackProxy)callback;
  }
 else {
    proxy=new DefaultCallbackProxy(getCallbackMethod(callback),mapper);
  }
  Class[] nativeParamTypes=proxy.getParameterTypes();
  Class returnType=proxy.getReturnType();
  if (mapper != null) {
    for (int i=0; i < nativeParamTypes.length; i++) {
      FromNativeConverter rc=mapper.getFromNativeConverter(nativeParamTypes[i]);
      if (rc != null) {
        nativeParamTypes[i]=rc.nativeType();
      }
    }
    ToNativeConverter tn=mapper.getToNativeConverter(returnType);
    if (tn != null) {
      returnType=tn.nativeType();
    }
  }
  for (int i=0; i < nativeParamTypes.length; i++) {
    nativeParamTypes[i]=getNativeType(nativeParamTypes[i]);
    if (!isAllowableNativeType(nativeParamTypes[i])) {
      String msg="Callback argument " + nativeParamTypes[i] + " requires custom type conversion";
      throw new IllegalArgumentException(msg);
    }
  }
  returnType=getNativeType(returnType);
  if (!isAllowableNativeType(returnType)) {
    String msg="Callback return type " + returnType + " requires custom type conversion";
    throw new IllegalArgumentException(msg);
  }
  cbstruct=createNativeCallback(proxy,PROXY_CALLBACK_METHOD,nativeParamTypes,returnType,callingConvention);
}
