{
  Method[] pubMethods=cls.getDeclaredMethods();
  Method[] classMethods=cls.getMethods();
  Set pmethods=new HashSet(Arrays.asList(pubMethods));
  pmethods.retainAll(Arrays.asList(classMethods));
  for (Iterator i=pmethods.iterator(); i.hasNext(); ) {
    Method m=(Method)i.next();
    if (Callback.FORBIDDEN_NAMES.contains(m.getName())) {
      i.remove();
    }
  }
  Method[] methods=(Method[])pmethods.toArray(new Method[pmethods.size()]);
  if (methods.length == 1) {
    return checkMethod(methods[0]);
  }
  for (int i=0; i < methods.length; i++) {
    Method m=methods[i];
    if (Callback.METHOD_NAME.equals(m.getName())) {
      return checkMethod(m);
    }
  }
  String msg="Callback must implement a single public method, " + "or one public method named '" + Callback.METHOD_NAME + "'";
  throw new IllegalArgumentException(msg);
}
