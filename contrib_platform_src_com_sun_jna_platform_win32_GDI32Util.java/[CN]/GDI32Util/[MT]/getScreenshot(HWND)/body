{
  RECT rect=new RECT();
  if (!User32.INSTANCE.GetWindowRect(target,rect)) {
    throw new Win32Exception(Native.getLastError());
  }
  Rectangle jRectangle=rect.toRectangle();
  int windowWidth=jRectangle.width;
  int windowHeight=jRectangle.height;
  if (windowWidth == 0 || windowHeight == 0) {
    throw new IllegalStateException("Window width and/or height were 0 even though GetWindowRect did not appear to fail.");
  }
  HDC hdcTarget=User32.INSTANCE.GetDC(target);
  if (hdcTarget == null) {
    throw new Win32Exception(Native.getLastError());
  }
  Win32Exception we=null;
  HDC hdcTargetMem=null;
  HBITMAP hBitmap=null;
  HANDLE hOriginal=null;
  BufferedImage image=null;
  try {
    image=new BufferedImage(windowWidth,windowHeight,BufferedImage.TYPE_INT_RGB);
    hdcTargetMem=GDI32.INSTANCE.CreateCompatibleDC(hdcTarget);
    if (hdcTargetMem == null) {
      throw new Win32Exception(Native.getLastError());
    }
    hBitmap=GDI32.INSTANCE.CreateCompatibleBitmap(hdcTarget,windowWidth,windowHeight);
    if (hBitmap == null) {
      throw new Win32Exception(Native.getLastError());
    }
    hOriginal=GDI32.INSTANCE.SelectObject(hdcTargetMem,hBitmap);
    if (hOriginal == null) {
      throw new Win32Exception(Native.getLastError());
    }
    if (!GDI32.INSTANCE.BitBlt(hdcTargetMem,0,0,windowWidth,windowHeight,hdcTarget,0,0,GDI32.SRCCOPY)) {
      throw new Win32Exception(Native.getLastError());
    }
    BITMAPINFO bmi=new BITMAPINFO();
    bmi.bmiHeader.biWidth=windowWidth;
    bmi.bmiHeader.biHeight=-windowHeight;
    bmi.bmiHeader.biPlanes=1;
    bmi.bmiHeader.biBitCount=32;
    bmi.bmiHeader.biCompression=WinGDI.BI_RGB;
    Memory buffer=new Memory(windowWidth * windowHeight * 4);
    int resultOfDrawing=GDI32.INSTANCE.GetDIBits(hdcTarget,hBitmap,0,windowHeight,buffer,bmi,WinGDI.DIB_RGB_COLORS);
    if (resultOfDrawing == 0 || resultOfDrawing == WinError.ERROR_INVALID_PARAMETER) {
      throw new Win32Exception(Native.getLastError());
    }
    image.setRGB(0,0,windowWidth,windowHeight,buffer.getIntArray(0,windowWidth * windowHeight),0,windowWidth);
  }
 catch (  Win32Exception e) {
    we=e;
  }
 finally {
    if (hOriginal != null) {
      HANDLE result=GDI32.INSTANCE.SelectObject(hdcTargetMem,hOriginal);
      if (result == null || WinGDI.HGDI_ERROR.equals(result)) {
        Win32Exception ex=new Win32Exception(Native.getLastError());
        if (we != null) {
          ex.addSuppressed(we);
        }
        we=ex;
      }
    }
    if (hBitmap != null) {
      if (!GDI32.INSTANCE.DeleteObject(hBitmap)) {
        Win32Exception ex=new Win32Exception(Native.getLastError());
        if (we != null) {
          ex.addSuppressed(we);
        }
        we=ex;
      }
    }
    if (hdcTargetMem != null) {
      if (!GDI32.INSTANCE.DeleteDC(hdcTargetMem)) {
        Win32Exception ex=new Win32Exception(Native.getLastError());
        if (we != null) {
          ex.addSuppressed(we);
        }
        we=ex;
      }
    }
    if (hdcTarget != null) {
      if (0 == User32.INSTANCE.ReleaseDC(target,hdcTarget)) {
        throw new IllegalStateException("Device context did not release properly.");
      }
    }
  }
  if (we != null) {
    throw we;
  }
  return image;
}
