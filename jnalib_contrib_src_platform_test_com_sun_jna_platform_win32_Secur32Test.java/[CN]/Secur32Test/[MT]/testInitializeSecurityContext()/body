{
  CredHandle phCredential=new CredHandle();
  TimeStamp ptsExpiry=new TimeStamp();
  assertEquals(W32Errors.SEC_E_OK,Secur32.INSTANCE.AcquireCredentialsHandle(null,"Negotiate",new NativeLong(Sspi.SECPKG_CRED_OUTBOUND),null,null,null,null,phCredential,ptsExpiry));
  CtxtHandle phNewContext=new CtxtHandle();
  SecBufferDesc pbToken=new SecBufferDesc(Sspi.SECBUFFER_TOKEN,Sspi.MAX_TOKEN_SIZE);
  NativeLongByReference pfContextAttr=new NativeLongByReference();
  int rc=Secur32.INSTANCE.InitializeSecurityContext(phCredential,null,Advapi32Util.getUserName(),new NativeLong(Sspi.ISC_REQ_CONNECTION),new NativeLong(0),new NativeLong(Sspi.SECURITY_NATIVE_DREP),null,new NativeLong(0),phNewContext,pbToken,pfContextAttr,null);
  assertTrue(rc == W32Errors.SEC_I_CONTINUE_NEEDED || rc == W32Errors.SEC_E_OK);
  assertTrue(phNewContext.dwLower != null);
  assertTrue(phNewContext.dwUpper != null);
  assertTrue(pbToken.pBuffers[0].getBytes().length > 0);
  assertEquals(W32Errors.SEC_E_OK,Secur32.INSTANCE.DeleteSecurityContext(phNewContext));
  assertEquals(W32Errors.SEC_E_OK,Secur32.INSTANCE.FreeCredentialsHandle(phCredential));
}
