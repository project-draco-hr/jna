{
  if (o == this)   return true;
  if (o == null)   return false;
  if (o.getClass() != getClass()) {
    if (!((o.getClass().isAssignableFrom(getClass()) && (ByReference.class.isAssignableFrom(getClass()) || ByValue.class.isAssignableFrom(getClass()))) || (getClass().isAssignableFrom(o.getClass()) && (ByReference.class.isAssignableFrom(o.getClass()) || ByValue.class.isAssignableFrom(o.getClass()))) || ((ByReference.class.isAssignableFrom(o.getClass()) || ByValue.class.isAssignableFrom(o.getClass())) && (ByReference.class.isAssignableFrom(getClass()) || ByValue.class.isAssignableFrom(getClass())) && (o.getClass().getSuperclass() == getClass().getSuperclass())))) {
      return false;
    }
  }
  Structure s=(Structure)o;
  if (s.size() == size()) {
    clear();
    write();
    byte[] buf=getPointer().getByteArray(0,size());
    s.clear();
    s.write();
    byte[] sbuf=s.getPointer().getByteArray(0,s.size());
    return Arrays.equals(buf,sbuf);
  }
  return false;
}
