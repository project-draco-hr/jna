{
  if (memory instanceof Memory) {
    Memory m=(Memory)memory;
    int requiredSize=array.length * size();
    if (m.getSize() < requiredSize) {
      m=new Memory(requiredSize);
      m.clear();
      useMemory(m);
    }
  }
  array[0]=this;
  int size=size();
  for (int i=1; i < array.length; i++) {
    try {
      array[i]=(Structure)getClass().newInstance();
      array[i].useMemory(memory.share(i * size,size));
      array[i].read();
    }
 catch (    InstantiationException e) {
      throw new IllegalArgumentException("Error instantiating " + getClass() + ": "+ e);
    }
catch (    IllegalAccessException e) {
      throw new IllegalArgumentException("Not allowed to instantiate " + getClass() + ": "+ e);
    }
  }
  return array;
}
