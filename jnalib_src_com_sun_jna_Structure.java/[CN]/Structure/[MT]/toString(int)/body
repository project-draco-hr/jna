{
  String LS=System.getProperty("line.separator");
  String name=getClass().getName() + "(" + getPointer()+ ")";
  String contents="";
  for (Iterator i=structFields.values().iterator(); i.hasNext(); ) {
    StructField sf=(StructField)i.next();
    for (int idx=0; idx < indent; idx++) {
      contents+="  ";
    }
    contents+="  " + sf.type.getName() + " "+ sf.name+ "@"+ Integer.toHexString(sf.offset);
    Object value=getField(sf);
    if (value instanceof Structure && !(value instanceof Structure.ByReference)) {
      value=((Structure)value).toString(indent + 1);
    }
    if (value != null) {
      value=value.toString().trim();
    }
    contents+="=" + value;
    contents+=LS;
  }
  if (indent == 0) {
    byte[] buf=getPointer().getByteArray(0,size());
    final int BYTES_PER_ROW=4;
    contents+="memory dump" + LS;
    for (int i=0; i < buf.length; i++) {
      if ((i % BYTES_PER_ROW) == 0)       contents+="[";
      if (buf[i] >= 0 && buf[i] < 16)       contents+="0";
      contents+=Integer.toHexString(buf[i] & 0xFF);
      if ((i % BYTES_PER_ROW) == BYTES_PER_ROW - 1 && i < buf.length - 1)       contents+="]" + LS;
    }
    contents+="]";
  }
  return name + LS + contents;
}
