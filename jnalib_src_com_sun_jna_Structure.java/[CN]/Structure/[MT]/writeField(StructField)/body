{
  if (structField.isReadOnly)   return;
  int offset=structField.offset;
  Object value=getField(structField);
  Class fieldType=structField.type;
  ToNativeConverter converter=structField.writeConverter;
  if (converter != null) {
    value=converter.toNative(value,new StructureWriteContext(this,structField.field));
    fieldType=converter.nativeType();
  }
  if (String.class == fieldType || WString.class == fieldType) {
    boolean wide=fieldType == WString.class;
    if (value != null) {
      NativeString nativeString=new NativeString(value.toString(),wide);
      nativeStrings.put(structField.name,nativeString);
      value=nativeString.getPointer();
    }
 else {
      value=null;
      nativeStrings.remove(structField.name);
    }
  }
  try {
    memory.setValue(offset,value,fieldType);
  }
 catch (  IllegalArgumentException e) {
    e.printStackTrace();
    String msg="Structure field \"" + structField.name + "\" was declared as "+ structField.type+ (structField.type == fieldType ? "" : " (native type " + fieldType + ")")+ ", which is not supported within a Structure";
    throw new IllegalArgumentException(msg);
  }
}
