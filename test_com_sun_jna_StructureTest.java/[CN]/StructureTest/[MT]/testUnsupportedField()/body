{
class BadNestedStructure extends Structure {
    public BadFieldStructure badStruct=new BadFieldStructure();
    @Override protected List getFieldOrder(){
      return Arrays.asList(new String[]{"badStruct"});
    }
  }
  try {
    new BadFieldStructure();
    fail("Should throw IllegalArgumentException on bad field");
  }
 catch (  IllegalArgumentException e) {
    assertTrue("Exception should include field name: " + e,e.getMessage().indexOf("badField") != -1);
  }
  try {
    new BadNestedStructure();
    fail("Should throw IllegalArgumentException on bad field");
  }
 catch (  IllegalArgumentException e) {
    assertTrue("Exception should include enclosing type: " + e,e.getMessage().indexOf(BadNestedStructure.class.getName()) != -1);
    assertTrue("Exception should include nested field name: " + e,e.getMessage().indexOf("badStruct") != -1);
    assertTrue("Exception should include field name: " + e,e.getMessage().indexOf("badField") != -1);
  }
}
