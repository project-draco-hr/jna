{
class TestStructure extends Structure {
{
      setFieldOrder(new String[]{"s1","s2","after"});
    }
    public PublicTestStructure s1, s2;
    public int after;
    protected List getFieldOrder(){
      return Arrays.asList(new String[]{"s1","s2","after"});
    }
  }
  TestStructure s=new TestStructure();
  TestStructure s2=new TestStructure();
  assertNotNull("Inner structure should be initialized",s.s1);
  assertNotNull("Inner structure should be initialized (cached)",s2.s1);
  assertEquals("Wrong aggregate size",s.s1.size() + s.s2.size() + 4,s.size());
  s.write();
  assertEquals("Wrong memory for structure field 1 after write",s.getPointer(),s.s1.getPointer());
  assertEquals("Wrong memory for structure field 2 after write",s.getPointer().share(s.s1.size()),s.s2.getPointer());
  s.read();
  assertEquals("Wrong memory for structure field 1 after read",s.getPointer(),s.s1.getPointer());
  assertEquals("Wrong memory for structure field 2 after read",s.getPointer().share(s.s1.size()),s.s2.getPointer());
}
