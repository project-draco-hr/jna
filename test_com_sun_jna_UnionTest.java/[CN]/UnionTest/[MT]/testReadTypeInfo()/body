{
  SizedUnion u=new SizedUnion();
  assertEquals("Wrong union size: " + u,16,u.size());
  assertNotNull("Type information is missing for union field of type " + BigTestStructure.class,Structure.getTypeInfo(BigTestStructure.class));
  assertNotNull("Type information is missing for union instance",u.getTypeInfo());
  if (Native.POINTER_SIZE == 4) {
    assertEquals("Type size should be that of largest field if no field is active",Structure.getTypeInfo(BigTestStructure.class).getInt(0),u.getTypeInfo().getInt(0));
  }
 else {
    assertEquals("Type size should be that of largest field if no field is active",Structure.getTypeInfo(BigTestStructure.class).getLong(0),u.getTypeInfo().getLong(0));
  }
  u.setType(int.class);
  assertNotNull("Type information is missing for union field of type " + BigTestStructure.class,Structure.getTypeInfo(BigTestStructure.class));
  assertNotNull("Type information is missing for union instance after type set",u.getTypeInfo());
  if (Native.POINTER_SIZE == 4) {
    assertEquals("Type size should be that of largest field if any field is active",Structure.getTypeInfo(BigTestStructure.class).getInt(0),u.getTypeInfo().getInt(0));
  }
 else {
    assertEquals("Type size should be that of largest field if any field is active",Structure.getTypeInfo(BigTestStructure.class).getLong(0),u.getTypeInfo().getLong(0));
  }
}
