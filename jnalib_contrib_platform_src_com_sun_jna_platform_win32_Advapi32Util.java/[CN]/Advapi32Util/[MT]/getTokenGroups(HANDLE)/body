{
  IntByReference tokenInformationLength=new IntByReference();
  if (Advapi32.INSTANCE.GetTokenInformation(hToken,WinNT.TOKEN_INFORMATION_CLASS.TokenGroups,null,0,tokenInformationLength)) {
    throw new RuntimeException("Expected GetTokenInformation to fail with ERROR_INSUFFICIENT_BUFFER");
  }
  int rc=Kernel32.INSTANCE.GetLastError();
  if (rc != W32Errors.ERROR_INSUFFICIENT_BUFFER) {
    throw new Win32Exception(rc);
  }
  WinNT.TOKEN_GROUPS groups=new WinNT.TOKEN_GROUPS(tokenInformationLength.getValue());
  if (!Advapi32.INSTANCE.GetTokenInformation(hToken,WinNT.TOKEN_INFORMATION_CLASS.TokenGroups,groups,tokenInformationLength.getValue(),tokenInformationLength)) {
    throw new Win32Exception(Kernel32.INSTANCE.GetLastError());
  }
  ArrayList<Account> userGroups=new ArrayList<Account>();
  for (  SID_AND_ATTRIBUTES sidAndAttribute : groups.getGroups()) {
    Account group=null;
    try {
      group=Advapi32Util.getAccountBySid(sidAndAttribute.Sid);
    }
 catch (    Exception e) {
      group=new Account();
      group.sid=sidAndAttribute.Sid.getBytes();
      group.sidString=Advapi32Util.convertSidToStringSid(sidAndAttribute.Sid);
      group.name=group.sidString;
      group.fqn=group.sidString;
      group.accountType=SID_NAME_USE.SidTypeGroup;
    }
    userGroups.add(group);
  }
  return userGroups.toArray(new Account[0]);
}
