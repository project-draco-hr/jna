{
  try {
    CLSID.ByReference clsid=new CLSID.ByReference();
    HRESULT hr=Ole32.INSTANCE.CLSIDFromString(new WString("{50A7E9B0-70EF-11D1-B75A-00A0C90564FE}"),clsid);
    COMUtils.checkTypeLibRC(hr);
    LCID lcid=Kernel32.INSTANCE.GetUserDefaultLCID();
    PointerByReference pTypeLib=new PointerByReference();
    hr=OleAuto.INSTANCE.LoadRegTypeLib(clsid,1,0,lcid,pTypeLib);
    COMUtils.checkTypeLibRC(hr);
    ITypeLib typelib=new ITypeLib(pTypeLib.getValue());
    BSTRByReference pBstrName=new BSTRByReference();
    BSTRByReference pBstrDocString=new BSTRByReference();
    DWORDbyReference pdwHelpContext=new DWORDbyReference();
    BSTRByReference pBstrHelpFile=new BSTRByReference();
    HRESULT hr2=typelib.GetDocumentation(-1,pBstrName,pBstrDocString,pdwHelpContext,pBstrHelpFile);
    String name=pBstrName.getValue();
    String docString=pBstrDocString.getValue();
    DWORD value=pdwHelpContext.getValue();
    String helpFile=pBstrHelpFile.getValue();
    ITypeInfo.ByReference typeinfo=new ITypeInfo.ByReference();
    UINT typeInfoCount=typelib.GetTypeInfoCount();
    for (int i=0; i < typeInfoCount.intValue(); ++i) {
      TYPEKIND.ByReference typekind=new TYPEKIND.ByReference();
      typelib.GetTypeInfoType(new UINT(i),typekind);
      if (typekind.value == TYPEKIND.TKIND_COCLASS) {
        BSTR className=new BSTR();
        TYPEATTR.ByReference typeattr=new TYPEATTR.ByReference();
        typelib.GetTypeInfo(new UINT(i),typeinfo);
        typeinfo.GetDocumentation(OaIdl.MEMBERID_NIL,className,null,null,null);
        typeinfo.GetTypeAttr(typeattr);
        for (int j=0; j < typeattr.cImplTypes.intValue(); ++j) {
          BSTR interfaceName=new BSTR();
          HREFTYPEbyReference hreftype=new HREFTYPEbyReference();
          ITypeInfo.ByReference classtypeinfo=new ITypeInfo.ByReference();
          typeinfo.GetRefTypeOfImplType(new UINT(j),hreftype);
          typeinfo.GetRefTypeInfo(hreftype.getValue(),classtypeinfo);
          classtypeinfo.GetDocumentation(OaIdl.MEMBERID_NIL,interfaceName,null,null,null);
        }
      }
    }
    System.out.println("end.");
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
