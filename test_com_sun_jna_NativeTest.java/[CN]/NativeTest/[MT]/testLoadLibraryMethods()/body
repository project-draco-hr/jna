{
  Class<?>[][] params={{Class.class},{Class.class,Map.class},{String.class,Class.class},{String.class,Class.class,Map.class}};
  StringBuilder signature=new StringBuilder(Long.SIZE);
  for (  Class<?>[] paramTypes : params) {
    signature.setLength(0);
    signature.append('(');
    for (    Class<?> p : paramTypes) {
      signature.append(Native.getSignature(p));
    }
    signature.append(')');
    try {
      Method m=Native.class.getMethod("loadLibrary",paramTypes);
      Class<?> returnType=m.getReturnType();
      signature.append(Native.getSignature(returnType));
      assertSame("Mismatched return type for signature=" + signature,Object.class,returnType);
    }
 catch (    NoSuchMethodError err) {
      fail("No method for signature=" + signature);
    }
  }
}
