{
  super(index,typeLibUtil,funcDesc,typeInfoUtil);
  String[] names=typeInfoUtil.getNames(funcDesc.memid,paramCount + 1);
  if (paramCount > 0)   methodvariables=", ";
  for (int i=0; i < paramCount; i++) {
    ELEMDESC elemdesc=funcDesc.lprgelemdescParam.elemDescArg[i];
    String methodName=names[i + 1].toLowerCase();
    methodparams+=this.getType(elemdesc.tdesc) + " " + this.replaceJavaKeyword(methodName);
    methodvariables+=methodName;
    if (i < (paramCount - 1)) {
      methodparams+=", ";
      methodvariables+=", ";
    }
  }
  this.replaceVariable("helpstring",docStr);
  this.replaceVariable("returntype",returnType);
  this.replaceVariable("methodname",methodName);
  this.replaceVariable("methodparams",methodparams);
  this.replaceVariable("methodvariables",methodvariables);
  this.replaceVariable("vtableid",String.valueOf(vtableId));
  this.replaceVariable("memberid",String.valueOf(memberid));
  this.replaceVariable("functionCount",String.valueOf(count));
}
