{
  File file=createTempFile();
  String lpFileName=file.getAbsolutePath();
  assertTrue(Advapi32.INSTANCE.EncryptFile(lpFileName));
  ULONG ulFlags=new ULONG(0);
  PointerByReference pvContext=new PointerByReference();
  assertEquals(W32Errors.ERROR_SUCCESS,Advapi32.INSTANCE.OpenEncryptedFileRaw(lpFileName,ulFlags,pvContext));
  final ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
  FE_EXPORT_FUNC pfExportCallback=new FE_EXPORT_FUNC(){
    @Override public DWORD callback(    Pointer pbData,    Pointer pvCallbackContext,    ULONG ulLength){
      if (pbData == null) {
        throw new NullPointerException("Callback data unexpectedly null");
      }
      byte[] arr=pbData.getByteArray(0,ulLength.intValue());
      try {
        outputStream.write(arr);
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
      return new DWORD(W32Errors.ERROR_SUCCESS);
    }
  }
;
  assertEquals(W32Errors.ERROR_SUCCESS,Advapi32.INSTANCE.ReadEncryptedFileRaw(pfExportCallback,null,pvContext.getValue()));
  outputStream.close();
  Advapi32.INSTANCE.CloseEncryptedFileRaw(pvContext.getValue());
  String lbFileName2=System.getProperty("java.io.tmpdir") + File.separator + "backup-"+ file.getName();
  ULONG ulFlags2=new ULONG(CREATE_FOR_IMPORT);
  PointerByReference pvContext2=new PointerByReference();
  assertEquals(W32Errors.ERROR_SUCCESS,Advapi32.INSTANCE.OpenEncryptedFileRaw(lbFileName2,ulFlags2,pvContext2));
  final IntByReference elementsReadWrapper=new IntByReference(0);
  FE_IMPORT_FUNC pfImportCallback=new FE_IMPORT_FUNC(){
    @Override public DWORD callback(    Pointer pbData,    Pointer pvCallbackContext,    ULONGByReference ulLength){
      int elementsRead=elementsReadWrapper.getValue();
      int remainingElements=outputStream.size() - elementsRead;
      int length=Math.min(remainingElements,ulLength.getValue().intValue());
      pbData.write(0,outputStream.toByteArray(),elementsRead,length);
      elementsReadWrapper.setValue(elementsRead + length);
      ulLength.setValue(new ULONG(length));
      return new DWORD(W32Errors.ERROR_SUCCESS);
    }
  }
;
  assertEquals(W32Errors.ERROR_SUCCESS,Advapi32.INSTANCE.WriteEncryptedFileRaw(pfImportCallback,null,pvContext2.getValue()));
  Advapi32.INSTANCE.CloseEncryptedFileRaw(pvContext2.getValue());
  file.delete();
  new File(lbFileName2.toString()).delete();
}
