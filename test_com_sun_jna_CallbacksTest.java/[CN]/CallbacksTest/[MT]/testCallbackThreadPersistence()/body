{
  final int[] called={0};
  final Set<Thread> threads=new HashSet<Thread>();
  final int COUNT=5;
  CallbackThreadInitializer init=new CallbackThreadInitializer(true,false){
    @Override public String getName(    Callback cb){
      return "Test thread (native) for " + CallbacksTest.this.getName() + " (call count: "+ called[0]+ ")";
    }
  }
;
  TestLibrary.VoidCallback cb=new TestLibrary.VoidCallback(){
    @Override public void callback(){
      threads.add(Thread.currentThread());
      ++called[0];
      if (THREAD_DETACH_BUG && called[0] == COUNT) {
        Native.detach(true);
      }
    }
  }
;
  callThreadedCallback(cb,init,COUNT,100,called);
  assertEquals("Multiple callbacks on a given native thread should use the same Thread mapping: " + threads,1,threads.size());
  waitFor(threads.iterator().next());
}
