{
  Map options=new HashMap();
  options.put(Library.OPTION_CALLING_CONVENTION,Function.ALT_CONVENTION);
  OptionCallingConventionTestLibrary lib=(OptionCallingConventionTestLibrary)Native.loadLibrary("testlib",OptionCallingConventionTestLibrary.class,options);
  OptionCallingConventionTestLibrary.TestCallback cb=new OptionCallingConventionTestLibrary.TestCallback(){
    public void invoke(){
    }
  }
;
  try {
    Pointer p=CallbackReference.getFunctionPointer(cb);
    CallbackReference ref=(CallbackReference)CallbackReference.callbackMap.get(cb);
    assertNotNull("CallbackReference not found",ref);
    assertEquals("Option-based calling convention not applied",Function.ALT_CONVENTION,ref.callingConvention);
  }
 catch (  IllegalArgumentException e) {
  }
}
