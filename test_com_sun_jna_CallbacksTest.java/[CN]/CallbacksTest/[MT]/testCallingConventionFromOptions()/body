{
  OptionCallingConventionTestLibrary lib=Native.loadLibrary("testlib",OptionCallingConventionTestLibrary.class,Collections.singletonMap(Library.OPTION_CALLING_CONVENTION,Function.ALT_CONVENTION));
  assertNotNull("Library not loaded",lib);
  OptionCallingConventionTestLibrary.TestCallback cb=new OptionCallingConventionTestLibrary.TestCallback(){
    @Override public void invoke(){
    }
  }
;
  try {
    Pointer p=CallbackReference.getFunctionPointer(cb);
    assertNotNull("No function pointer",p);
    CallbackReference ref=CallbackReference.callbackMap.get(cb);
    assertNotNull("CallbackReference not found",ref);
    assertEquals("Option-based calling convention not applied",Function.ALT_CONVENTION,ref.callingConvention);
  }
 catch (  IllegalArgumentException e) {
  }
}
