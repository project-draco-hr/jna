{
  TestLibrary.StringCallback cb=new TestLibrary.StringCallback(){
    @Override public String callback(    String arg,    String arg2){
      return arg + arg2;
    }
  }
;
  Map<?,?> m=CallbackReference.allocations;
  m.clear();
  Charset charset=Charset.forName(Native.getDefaultStringEncoding());
  String arg=getName() + "1" + charset.decode(charset.encode(UNICODE));
  String arg2=getName() + "2" + charset.decode(charset.encode(UNICODE));
  String value=lib.callStringCallback(cb,arg,arg2);
  WeakReference<Object> ref=new WeakReference<Object>(value);
  arg=null;
  value=null;
  System.gc();
  for (int i=0; i < 100 && (ref.get() != null || m.size() > 0); ++i) {
    try {
      Thread.sleep(10);
      System.gc();
    }
  finally {
    }
  }
  assertNull("NativeString reference not GC'd",ref.get());
  assertEquals("NativeString reference still held: " + m.values(),0,m.size());
}
