{
  HANDLEByReference phToken=new HANDLEByReference();
  try {
    HANDLE threadHandle=Kernel32.INSTANCE.GetCurrentThread();
    if (!Advapi32.INSTANCE.OpenThreadToken(threadHandle,WinNT.TOKEN_DUPLICATE | WinNT.TOKEN_QUERY,true,phToken)) {
      if (W32Errors.ERROR_NO_TOKEN != Kernel32.INSTANCE.GetLastError()) {
        throw new LastErrorException(Kernel32.INSTANCE.GetLastError());
      }
      HANDLE processHandle=Kernel32.INSTANCE.GetCurrentProcess();
      if (!Advapi32.INSTANCE.OpenProcessToken(processHandle,WinNT.TOKEN_DUPLICATE | WinNT.TOKEN_QUERY,phToken)) {
        throw new LastErrorException(Kernel32.INSTANCE.GetLastError());
      }
    }
    IntByReference tokenInformationLength=new IntByReference();
    if (Advapi32.INSTANCE.GetTokenInformation(phToken.getValue(),WinNT.TOKEN_INFORMATION_CLASS.TokenGroups,null,0,tokenInformationLength) || Kernel32.INSTANCE.GetLastError() != W32Errors.ERROR_INSUFFICIENT_BUFFER) {
      throw new RuntimeException("Expected GetTokenInformation to fail with ERROR_INSUFFICIENT_BUFFER");
    }
    Memory tokenInformationBuffer=new Memory(tokenInformationLength.getValue());
    WinNT.TOKEN_GROUPS groups=new WinNT.TOKEN_GROUPS(tokenInformationBuffer);
    if (!Advapi32.INSTANCE.GetTokenInformation(phToken.getValue(),WinNT.TOKEN_INFORMATION_CLASS.TokenGroups,groups,tokenInformationLength.getValue(),tokenInformationLength)) {
      throw new LastErrorException(Kernel32.INSTANCE.GetLastError());
    }
    ArrayList<Group> userGroups=new ArrayList<Group>();
    for (    SID_AND_ATTRIBUTES sidAndAttribute : groups.getGroups()) {
      Group group=new Group();
      group.sid=sidAndAttribute.Sid.getBytes();
      group.sidString=Advapi32Util.convertSidToStringSid(sidAndAttribute.Sid);
      try {
        group.name=Advapi32Util.getAccountBySid(sidAndAttribute.Sid).name;
      }
 catch (      Exception e) {
        group.name=group.sidString;
      }
      userGroups.add(group);
    }
    return userGroups.toArray(new Group[0]);
  }
  finally {
    if (phToken.getValue() != Kernel32.INVALID_HANDLE_VALUE) {
      if (!Kernel32.INSTANCE.CloseHandle(phToken.getValue())) {
        throw new LastErrorException(Kernel32.INSTANCE.GetLastError());
      }
    }
  }
}
