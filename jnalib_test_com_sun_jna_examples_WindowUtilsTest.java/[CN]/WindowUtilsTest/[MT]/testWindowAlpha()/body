{
  if (GraphicsEnvironment.isHeadless())   return;
  System.setProperty("sun.java2d.noddraw","true");
  GraphicsConfiguration gconfig=WindowUtils.getAlphaCompatibleGraphicsConfiguration();
  Frame root=JOptionPane.getRootFrame();
  final Window background=new Window(root);
  background.setBackground(Color.white);
  background.setLocation(X,Y);
  final Window transparent=new Window(root,gconfig);
  transparent.setBackground(Color.black);
  transparent.setLocation(X,Y);
  WindowUtils.setWindowAlpha(transparent,.5f);
  transparent.addMouseListener(handler);
  transparent.addMouseMotionListener(handler);
  SwingUtilities.invokeAndWait(new Runnable(){
    public void run(){
      background.pack();
      background.setSize(new Dimension(W,H));
      background.setVisible(true);
      transparent.pack();
      transparent.setSize(new Dimension(W,H));
      transparent.setVisible(true);
    }
  }
);
  Point where=new Point(transparent.getX() + W / 2,transparent.getY() + H / 2);
  Color sample=robot.getPixelColor(where.x,where.y);
  if (System.getProperty("os.name").startsWith("Windows")) {
    assertFalse("Sample not transparent (w32)",sample.equals(transparent.getBackground()));
  }
 else {
    assertEquals("Sample should be 50% fg/bg",new Color(128,128,128),sample);
  }
  SwingUtilities.invokeAndWait(new Runnable(){
    public void run(){
      WindowUtils.setWindowAlpha(transparent,1f);
    }
  }
);
  sample=robot.getPixelColor(where.x,where.y);
  assertEquals("Window should be opaque with alpha=1f",transparent.getBackground(),sample);
  SwingUtilities.invokeAndWait(new Runnable(){
    public void run(){
      WindowUtils.setWindowAlpha(transparent,0f);
    }
  }
);
  sample=robot.getPixelColor(where.x,where.y);
  assertEquals("Window should be transparent with alpha=0f",transparent.getBackground(),sample);
}
