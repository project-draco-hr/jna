{
  if (GraphicsEnvironment.isHeadless())   return;
  Frame root=JOptionPane.getRootFrame();
  final Window back=new Window(root);
  back.setBackground(new Color(255,255,255));
  back.setLocation(X,Y);
  final JWindow front=new JWindow(root);
  Color frontColor=new Color(0,0,255);
  front.getContentPane().setBackground(frontColor);
  front.setLocation(X,Y);
  Area mask=new Area(new Rectangle(0,0,W,H));
  mask.subtract(new Area(new Rectangle(W / 4,H / 4,W / 2,H / 2)));
  WindowUtils.setWindowMask(front,mask);
  front.addMouseListener(handler);
  front.addMouseMotionListener(handler);
  SwingUtilities.invokeAndWait(new Runnable(){
    public void run(){
      back.pack();
      back.setSize(new Dimension(W,H));
      back.setVisible(true);
      front.pack();
      front.setSize(new Dimension(W,H));
      front.setVisible(true);
    }
  }
);
  Color sample=robot.getPixelColor(front.getX(),front.getY());
  long start=System.currentTimeMillis();
  while (!sample.equals(frontColor)) {
    front.toFront();
    Thread.sleep(10);
    if (System.currentTimeMillis() - start > 5000)     fail("Timed out waiting for window to show");
    sample=robot.getPixelColor(front.getX(),front.getY());
  }
  Point where=new Point(front.getX() + W / 4,front.getY() + H / 4);
  sample=robot.getPixelColor(where.x,where.y);
  assertEquals("Background window should show through",back.getBackground(),sample);
  sample=robot.getPixelColor(where.x + W / 2 - 1,where.y);
  assertEquals("Background window should show through",back.getBackground(),sample);
  sample=robot.getPixelColor(where.x + W / 2 - 1,where.y + H / 2 - 1);
  assertEquals("Background window should show through",back.getBackground(),sample);
  sample=robot.getPixelColor(where.x,where.y + H / 2 - 1);
  assertEquals("Background window should show through",back.getBackground(),sample);
  sample=robot.getPixelColor(where.x - 1,where.y - 2);
  assertEquals("Foreground window should show through",frontColor,sample);
}
