{
  String windowClass=new String("MyWindowClass");
  HMODULE hInst=Kernel32.INSTANCE.GetModuleHandle("");
  WNDCLASSEX wClass=new WNDCLASSEX();
  wClass.hInstance=hInst;
  wClass.lpfnWndProc=Win32WindowDemo.this;
  wClass.lpszClassName=windowClass;
  User32.INSTANCE.RegisterClassEx(wClass);
  getLastError();
  HWND hWnd=User32.INSTANCE.CreateWindowEx(User32.WS_EX_TOPMOST,windowClass,"My hidden helper window, used only to catch the windows events",0,0,0,0,0,null,null,hInst,null);
  getLastError();
  System.out.println("window sucessfully created! window hwnd: " + hWnd.getPointer().toString());
  Wtsapi32.INSTANCE.WTSRegisterSessionNotification(hWnd,Wtsapi32.NOTIFY_FOR_THIS_SESSION);
  DEV_BROADCAST_DEVICEINTERFACE notificationFilter=new DEV_BROADCAST_DEVICEINTERFACE();
  notificationFilter.dbcc_size=notificationFilter.size();
  notificationFilter.dbcc_devicetype=DBT.DBT_DEVTYP_DEVICEINTERFACE;
  notificationFilter.dbcc_classguid=DBT.GUID_DEVINTERFACE_USB_DEVICE;
  HDEVNOTIFY hDevNotify=User32.INSTANCE.RegisterDeviceNotification(hWnd,notificationFilter,User32.DEVICE_NOTIFY_WINDOW_HANDLE);
  getLastError();
  if (hDevNotify != null)   System.out.println("RegisterDeviceNotification was sucessfully!");
  MSG msg=new MSG();
  while (User32.INSTANCE.GetMessage(msg,hWnd,0,0) != 0) {
    User32.INSTANCE.TranslateMessage(msg);
    User32.INSTANCE.DispatchMessage(msg);
  }
  User32.INSTANCE.UnregisterDeviceNotification(hDevNotify);
  Wtsapi32.INSTANCE.WTSUnRegisterSessionNotification(hWnd);
  User32.INSTANCE.UnregisterClass(windowClass,hInst);
  User32.INSTANCE.DestroyWindow(hWnd);
  System.out.println("program exit!");
}
