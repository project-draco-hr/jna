{
  super(index,typeLibUtil,funcDesc,typeInfoUtil);
  TypeInfoDoc typeInfoDoc=typeInfoUtil.getDocumentation(funcDesc.memid);
  String methodname=typeInfoDoc.getName();
  String docStr=typeInfoDoc.getDocString();
  String methodparams="";
  String methodvariables="";
  short vtableId=funcDesc.oVft.shortValue();
  short paramCount=funcDesc.cParams.shortValue();
  ELEMDESC elemDesdRetType=funcDesc.elemdescFunc;
  String returnType=this.getType(elemDesdRetType.tdesc);
  String[] names=typeInfoUtil.getNames(funcDesc.memid,paramCount + 1);
  if (paramCount > 0)   methodvariables=", ";
  for (int i=0; i < paramCount; i++) {
    ELEMDESC elemdesc=funcDesc.lprgelemdescParam.elemDescArg[i];
    String methodName=names[i + 1].toLowerCase();
    methodparams+=this.getType(elemdesc.tdesc) + " " + this.validateMethodName(methodName);
    methodvariables+=methodName;
    if (i < (paramCount - 1)) {
      methodparams+=", ";
      methodvariables+=", ";
    }
  }
  this.replaceVariable("helpstring",docStr);
  this.replaceVariable("returntype",returnType);
  this.replaceVariable("methodname",methodname);
  this.replaceVariable("methodparams",methodparams);
  this.replaceVariable("vtableid",String.valueOf(vtableId));
}
