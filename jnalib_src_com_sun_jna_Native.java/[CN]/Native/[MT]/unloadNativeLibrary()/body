{
  String path=nativeLibraryPath;
  if (path == null)   return true;
  File flib=new File(path);
  if (unpacked) {
    flib.delete();
  }
  try {
    ClassLoader cl=Native.class.getClassLoader();
    Field f=ClassLoader.class.getDeclaredField("nativeLibraries");
    f.setAccessible(true);
    List libs=(List)f.get(cl);
    for (Iterator i=libs.iterator(); i.hasNext(); ) {
      Object lib=i.next();
      f=lib.getClass().getDeclaredField("name");
      f.setAccessible(true);
      String name=(String)f.get(lib);
      if (name.equals(path) || name.indexOf(path) != -1) {
        Method m=lib.getClass().getDeclaredMethod("finalize",new Class[0]);
        m.setAccessible(true);
        m.invoke(lib,new Object[0]);
        System.out.println("library unloaded (unpacked=" + unpacked + ")");
        nativeLibraryPath=null;
        if (unpacked) {
          if (flib.exists()) {
            System.out.println("attempt file delete: " + flib);
            if (flib.delete()) {
              System.out.println("file deleted");
              unpacked=false;
              return true;
            }
            return false;
          }
        }
        return true;
      }
    }
  }
 catch (  Exception e) {
  }
  return false;
}
