{
  String libname=System.mapLibraryName("jnidispatch");
  String resourceName=getNativeLibraryResourcePath() + "/" + libname;
  URL url=Native.class.getResource(resourceName);
  if (url == null) {
    throw new UnsatisfiedLinkError("jnidispatch (" + resourceName + ") not found in resource path");
  }
  File lib=null;
  if (url.getProtocol().toLowerCase().equals("file")) {
    try {
      lib=new File(URLDecoder.decode(url.getPath(),"UTF8"));
    }
 catch (    UnsupportedEncodingException e) {
      throw new Error("JRE is unexpectedly missing UTF8 encoding");
    }
  }
 else {
    InputStream is=Native.class.getResourceAsStream(resourceName);
    if (is == null) {
      throw new Error("Can't obtain jnidispatch InputStream");
    }
    FileOutputStream fos=null;
    try {
      lib=File.createTempFile("jna",null);
      lib.deleteOnExit();
      if (Platform.isWindows()) {
        Runtime.getRuntime().addShutdownHook(new W32Cleanup(lib));
      }
      fos=new FileOutputStream(lib);
      int count;
      byte[] buf=new byte[1024];
      while ((count=is.read(buf,0,buf.length)) > 0) {
        fos.write(buf,0,count);
      }
    }
 catch (    IOException e) {
      throw new Error("Failed to create temporary file for jnidispatch library",e);
    }
 finally {
      try {
        is.close();
      }
 catch (      IOException e) {
      }
      if (fos != null) {
        try {
          fos.close();
        }
 catch (        IOException e) {
        }
      }
    }
  }
  if (Platform.isWindows()) {
    Toolkit.getDefaultToolkit();
    try {
      System.loadLibrary("jawt");
    }
 catch (    UnsatisfiedLinkError e) {
      e.printStackTrace();
    }
  }
  System.load(lib.getAbsolutePath());
}
