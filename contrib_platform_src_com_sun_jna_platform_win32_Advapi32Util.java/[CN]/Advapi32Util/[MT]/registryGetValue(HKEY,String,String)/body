{
  Object result=null;
  IntByReference lpType=new IntByReference();
  byte[] lpData=new byte[Advapi32.MAX_VALUE_NAME];
  IntByReference lpcbData=new IntByReference(Advapi32.MAX_VALUE_NAME);
  int rc=Advapi32.INSTANCE.RegGetValue(hkKey,subKey,lpValueName,Advapi32.RRF_RT_ANY,lpType,lpData,lpcbData);
  if (lpType.getValue() == WinNT.REG_NONE)   return null;
  if (rc != W32Errors.ERROR_SUCCESS && rc != W32Errors.ERROR_INSUFFICIENT_BUFFER) {
    throw new Win32Exception(rc);
  }
  Memory byteData=new Memory(lpcbData.getValue());
  byteData.write(0,lpData,0,lpcbData.getValue());
  if (lpType.getValue() == WinNT.REG_DWORD) {
    result=Integer.valueOf(byteData.getInt(0));
  }
 else   if (lpType.getValue() == WinNT.REG_QWORD) {
    result=Long.valueOf(byteData.getLong(0));
  }
 else   if (lpType.getValue() == WinNT.REG_BINARY) {
    result=byteData.getByteArray(0,lpcbData.getValue());
  }
 else   if ((lpType.getValue() == WinNT.REG_SZ) || (lpType.getValue() == WinNT.REG_EXPAND_SZ)) {
    result=byteData.getWideString(0);
  }
  return result;
}
