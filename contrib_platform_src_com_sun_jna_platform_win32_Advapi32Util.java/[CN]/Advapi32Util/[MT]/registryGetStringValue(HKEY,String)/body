{
  IntByReference lpcbData=new IntByReference();
  IntByReference lpType=new IntByReference();
  int rc=Advapi32.INSTANCE.RegQueryValueEx(hKey,value,0,lpType,(char[])null,lpcbData);
  if (rc != W32Errors.ERROR_SUCCESS && rc != W32Errors.ERROR_INSUFFICIENT_BUFFER) {
    throw new Win32Exception(rc);
  }
  if (lpType.getValue() != WinNT.REG_SZ && lpType.getValue() != WinNT.REG_EXPAND_SZ) {
    throw new RuntimeException("Unexpected registry type " + lpType.getValue() + ", expected REG_SZ or REG_EXPAND_SZ");
  }
  char[] data=new char[lpcbData.getValue()];
  rc=Advapi32.INSTANCE.RegQueryValueEx(hKey,value,0,lpType,data,lpcbData);
  if (rc != W32Errors.ERROR_SUCCESS && rc != W32Errors.ERROR_INSUFFICIENT_BUFFER) {
    throw new Win32Exception(rc);
  }
  return Native.toString(data);
}
