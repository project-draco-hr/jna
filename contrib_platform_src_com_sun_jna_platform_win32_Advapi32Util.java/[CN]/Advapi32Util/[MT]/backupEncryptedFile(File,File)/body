{
  if (!destDir.isDirectory()) {
    throw new IllegalArgumentException("destDir must be a directory.");
  }
  ULONG readFlag=new ULONG(0);
  ULONG writeFlag=new ULONG(CREATE_FOR_IMPORT);
  if (src.isDirectory()) {
    writeFlag.setValue(CREATE_FOR_IMPORT | CREATE_FOR_DIR);
  }
  WString srcFileName=new WString(src.getAbsolutePath());
  PointerByReference pvContext=new PointerByReference();
  if (Advapi32.INSTANCE.OpenEncryptedFileRaw(srcFileName,readFlag,pvContext) != W32Errors.ERROR_SUCCESS) {
    throw new Win32Exception(Kernel32.INSTANCE.GetLastError());
  }
  final ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
  FE_EXPORT_FUNC pfExportCallback=new FE_EXPORT_FUNC(){
    @Override public DWORD callback(    ByteByReference pbData,    Pointer pvCallbackContext,    ULONG ulLength){
      byte[] arr=pbData.getPointer().getByteArray(0,ulLength.intValue());
      try {
        outputStream.write(arr);
      }
 catch (      IOException e) {
        throw new RuntimeException(e);
      }
      return new DWORD(W32Errors.ERROR_SUCCESS);
    }
  }
;
  if (Advapi32.INSTANCE.ReadEncryptedFileRaw(pfExportCallback,null,pvContext.getValue()) != W32Errors.ERROR_SUCCESS) {
    throw new Win32Exception(Kernel32.INSTANCE.GetLastError());
  }
  try {
    outputStream.close();
  }
 catch (  IOException e) {
    throw new RuntimeException(e);
  }
  Advapi32.INSTANCE.CloseEncryptedFileRaw(pvContext.getValue());
  WString destFileName=new WString(destDir.getAbsolutePath() + File.separator + src.getName());
  pvContext=new PointerByReference();
  if (Advapi32.INSTANCE.OpenEncryptedFileRaw(destFileName,writeFlag,pvContext) != W32Errors.ERROR_SUCCESS) {
    throw new Win32Exception(Kernel32.INSTANCE.GetLastError());
  }
  final IntByReference elementsReadWrapper=new IntByReference(0);
  FE_IMPORT_FUNC pfImportCallback=new FE_IMPORT_FUNC(){
    @Override public DWORD callback(    ByteByReference pbData,    Pointer pvCallbackContext,    ULONGByReference ulLength){
      int elementsRead=elementsReadWrapper.getValue();
      int remainingElements=outputStream.size() - elementsRead;
      int length=Math.min(remainingElements,ulLength.getValue().intValue());
      pbData.getPointer().write(0,outputStream.toByteArray(),elementsRead,length);
      elementsReadWrapper.setValue(elementsRead + length);
      ulLength.setValue(new ULONG(length));
      return new DWORD(W32Errors.ERROR_SUCCESS);
    }
  }
;
  if (Advapi32.INSTANCE.WriteEncryptedFileRaw(pfImportCallback,null,pvContext.getValue()) != W32Errors.ERROR_SUCCESS) {
    throw new Win32Exception(Kernel32.INSTANCE.GetLastError());
  }
  Advapi32.INSTANCE.CloseEncryptedFileRaw(pvContext.getValue());
}
