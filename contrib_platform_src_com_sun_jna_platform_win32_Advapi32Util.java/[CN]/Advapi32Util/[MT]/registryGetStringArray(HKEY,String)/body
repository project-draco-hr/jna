{
  IntByReference lpcbData=new IntByReference();
  IntByReference lpType=new IntByReference();
  int rc=Advapi32.INSTANCE.RegQueryValueEx(hKey,value,0,lpType,(char[])null,lpcbData);
  if (rc != W32Errors.ERROR_SUCCESS && rc != W32Errors.ERROR_INSUFFICIENT_BUFFER) {
    throw new Win32Exception(rc);
  }
  if (lpType.getValue() != WinNT.REG_MULTI_SZ) {
    throw new RuntimeException("Unexpected registry type " + lpType.getValue() + ", expected REG_SZ");
  }
  Memory data=new Memory(lpcbData.getValue());
  rc=Advapi32.INSTANCE.RegQueryValueEx(hKey,value,0,lpType,data,lpcbData);
  if (rc != W32Errors.ERROR_SUCCESS && rc != W32Errors.ERROR_INSUFFICIENT_BUFFER) {
    throw new Win32Exception(rc);
  }
  ArrayList<String> result=new ArrayList<String>();
  int offset=0;
  while (offset < data.size()) {
    String s=data.getWideString(offset);
    offset+=s.length() * Native.WCHAR_SIZE;
    offset+=Native.WCHAR_SIZE;
    if (s.length() == 0 && offset == data.size()) {
    }
 else {
      result.add(s);
    }
  }
  return result.toArray(new String[0]);
}
