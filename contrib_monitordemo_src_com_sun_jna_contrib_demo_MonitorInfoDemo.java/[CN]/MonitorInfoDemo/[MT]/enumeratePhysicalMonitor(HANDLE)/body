{
  MC_DISPLAY_TECHNOLOGY_TYPE.ByReference techType=new MC_DISPLAY_TECHNOLOGY_TYPE.ByReference();
  Dxva2.INSTANCE.GetMonitorTechnologyType(hPhysicalMonitor,techType);
  System.out.println("TECHTYPE: " + techType.getValue());
  DWORDByReference temps=new DWORDByReference();
  DWORDByReference caps=new DWORDByReference();
  Dxva2.INSTANCE.GetMonitorCapabilities(hPhysicalMonitor,caps,temps);
  System.out.println("CAPS " + EnumUtils.setFromInteger(caps.getValue().intValue(),HighLevelMonitorConfigurationAPI.MC_CAPS.class));
  System.out.println("Temps " + temps.getValue());
  DWORDByReference pdwMinimumBrightness=new DWORDByReference();
  DWORDByReference pdwCurrentBrightness=new DWORDByReference();
  DWORDByReference pdwMaximumBrightness=new DWORDByReference();
  Dxva2.INSTANCE.GetMonitorBrightness(hPhysicalMonitor,pdwMinimumBrightness,pdwCurrentBrightness,pdwMaximumBrightness);
  System.out.println("Brightness Min: " + pdwMinimumBrightness.getValue());
  System.out.println("Brightness Current: " + pdwCurrentBrightness.getValue());
  System.out.println("Brightness Max: " + pdwMaximumBrightness.getValue());
  DWORDByReference pdwMinimumContrast=new DWORDByReference();
  DWORDByReference pdwCurrentContrast=new DWORDByReference();
  DWORDByReference pdwMaximumContrast=new DWORDByReference();
  Dxva2.INSTANCE.GetMonitorContrast(hPhysicalMonitor,pdwMinimumContrast,pdwCurrentContrast,pdwMaximumContrast);
  System.out.println("Contrast Min: " + pdwMinimumContrast.getValue());
  System.out.println("Contrast Current: " + pdwCurrentContrast.getValue());
  System.out.println("Contrast Max: " + pdwMaximumContrast.getValue());
  MC_COLOR_TEMPERATURE.ByReference pctCurrentColorTemperature=new MC_COLOR_TEMPERATURE.ByReference();
  Dxva2.INSTANCE.GetMonitorColorTemperature(hPhysicalMonitor,pctCurrentColorTemperature);
  System.out.println("Current Temp: " + pctCurrentColorTemperature.getValue());
  DWORDByReference pdwCapabilitiesStringLengthInCharacters=new DWORDByReference();
  Dxva2.INSTANCE.GetCapabilitiesStringLength(hPhysicalMonitor,pdwCapabilitiesStringLengthInCharacters);
  DWORD capStrLen=pdwCapabilitiesStringLengthInCharacters.getValue();
  LPSTR pszASCIICapabilitiesString=new LPSTR(new Memory(capStrLen.intValue()));
  Dxva2.INSTANCE.CapabilitiesRequestAndCapabilitiesReply(hPhysicalMonitor,pszASCIICapabilitiesString,capStrLen);
  System.out.println("Cap-String:" + new String(pszASCIICapabilitiesString.getPointer().getString(0)));
  MC_POSITION_TYPE ptPositionType=MC_POSITION_TYPE.MC_HORIZONTAL_POSITION;
  DWORDByReference pdwMinimumPosition=new DWORDByReference();
  DWORDByReference pdwCurrentPosition=new DWORDByReference();
  DWORDByReference pdwMaximumPosition=new DWORDByReference();
  Dxva2.INSTANCE.GetMonitorDisplayAreaPosition(hPhysicalMonitor,ptPositionType,pdwMinimumPosition,pdwCurrentPosition,pdwMaximumPosition);
  System.out.println("Position (horz) Min: " + pdwMinimumPosition.getValue());
  System.out.println("Position (horz) Current: " + pdwCurrentPosition.getValue());
  System.out.println("Position (horz) Max: " + pdwMaximumPosition.getValue());
  MC_SIZE_TYPE ptSizeType=MC_SIZE_TYPE.MC_WIDTH;
  DWORDByReference pdwMinimumSize=new DWORDByReference();
  DWORDByReference pdwCurrentSize=new DWORDByReference();
  DWORDByReference pdwMaximumSize=new DWORDByReference();
  Dxva2.INSTANCE.GetMonitorDisplayAreaSize(hPhysicalMonitor,ptSizeType,pdwMinimumSize,pdwCurrentSize,pdwMaximumSize);
  System.out.println("Width Min: " + pdwMinimumSize.getValue());
  System.out.println("Width Current: " + pdwCurrentSize.getValue());
  System.out.println("Width Max: " + pdwMaximumSize.getValue());
  MC_GAIN_TYPE ptGainType=MC_GAIN_TYPE.MC_RED_GAIN;
  DWORDByReference pdwMinimumGain=new DWORDByReference();
  DWORDByReference pdwCurrentGain=new DWORDByReference();
  DWORDByReference pdwMaximumGain=new DWORDByReference();
  Dxva2.INSTANCE.GetMonitorRedGreenOrBlueGain(hPhysicalMonitor,ptGainType,pdwMinimumGain,pdwCurrentGain,pdwMaximumGain);
  System.out.println("Red Gain Min: " + pdwMinimumSize.getValue());
  System.out.println("Red Gain Current: " + pdwCurrentSize.getValue());
  System.out.println("Red Gain Max: " + pdwMaximumSize.getValue());
  MC_DRIVE_TYPE ptDriveType=MC_DRIVE_TYPE.MC_RED_DRIVE;
  DWORDByReference pdwMinimumDrive=new DWORDByReference();
  DWORDByReference pdwCurrentDrive=new DWORDByReference();
  DWORDByReference pdwMaximumDrive=new DWORDByReference();
  Dxva2.INSTANCE.GetMonitorRedGreenOrBlueDrive(hPhysicalMonitor,ptDriveType,pdwMinimumDrive,pdwCurrentDrive,pdwMaximumDrive);
  System.out.println("Red Drive Min: " + pdwMinimumSize.getValue());
  System.out.println("Red Drive Current: " + pdwCurrentSize.getValue());
  System.out.println("Red Drive Max: " + pdwMaximumSize.getValue());
  MC_TIMING_REPORT pmtrMonitorTimingReport=new MC_TIMING_REPORT();
  Dxva2.INSTANCE.GetTimingReport(hPhysicalMonitor,pmtrMonitorTimingReport);
  System.out.println("HorizontalFrequencyInHZ " + pmtrMonitorTimingReport.dwHorizontalFrequencyInHZ);
  System.out.println("VerticalFrequencyInHZ " + pmtrMonitorTimingReport.dwVerticalFrequencyInHZ);
  System.out.println("--------------------------------------");
}
