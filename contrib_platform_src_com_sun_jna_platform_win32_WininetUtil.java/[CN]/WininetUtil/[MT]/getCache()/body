{
  List<INTERNET_CACHE_ENTRY_INFO> items=new ArrayList<Wininet.INTERNET_CACHE_ENTRY_INFO>();
  HANDLE cacheHandle=null;
  Win32Exception we=null;
  int lastError=0;
  Map<String,String> cacheItems=new LinkedHashMap<String,String>();
  try {
    IntByReference size=new IntByReference();
    cacheHandle=Wininet.INSTANCE.FindFirstUrlCacheEntry(null,null,size);
    lastError=Native.getLastError();
    if (lastError == WinError.ERROR_NO_MORE_ITEMS) {
      return cacheItems;
    }
 else     if (lastError != WinError.ERROR_SUCCESS && lastError != WinError.ERROR_INSUFFICIENT_BUFFER) {
      throw new Win32Exception(lastError);
    }
    INTERNET_CACHE_ENTRY_INFO entry=new INTERNET_CACHE_ENTRY_INFO(size.getValue());
    cacheHandle=Wininet.INSTANCE.FindFirstUrlCacheEntry(null,entry,size);
    if (cacheHandle == null) {
      throw new Win32Exception(Native.getLastError());
    }
    items.add(entry);
    while (true) {
      size=new IntByReference();
      boolean result=Wininet.INSTANCE.FindNextUrlCacheEntry(cacheHandle,null,size);
      if (!result) {
        lastError=Native.getLastError();
        if (lastError == WinError.ERROR_NO_MORE_ITEMS) {
          break;
        }
 else         if (lastError != WinError.ERROR_SUCCESS && lastError != WinError.ERROR_INSUFFICIENT_BUFFER) {
          throw new Win32Exception(lastError);
        }
      }
      entry=new INTERNET_CACHE_ENTRY_INFO(size.getValue());
      result=Wininet.INSTANCE.FindNextUrlCacheEntry(cacheHandle,entry,size);
      if (!result) {
        lastError=Native.getLastError();
        if (lastError == WinError.ERROR_NO_MORE_ITEMS) {
          break;
        }
 else         if (lastError != WinError.ERROR_SUCCESS && lastError != WinError.ERROR_INSUFFICIENT_BUFFER) {
          throw new Win32Exception(lastError);
        }
      }
      items.add(entry);
    }
    for (    INTERNET_CACHE_ENTRY_INFO item : items) {
      cacheItems.put(item.lpszSourceUrlName.getWideString(0),item.lpszLocalFileName == null ? "" : item.lpszLocalFileName.getWideString(0));
    }
  }
 catch (  Win32Exception e) {
    we=e;
  }
 finally {
    if (cacheHandle != null) {
      if (!Wininet.INSTANCE.FindCloseUrlCache(cacheHandle)) {
        if (we != null) {
          Win32Exception e=new Win32Exception(Native.getLastError());
          e.addSuppressed(we);
          we=e;
        }
      }
    }
  }
  if (we != null) {
    throw we;
  }
  return cacheItems;
}
