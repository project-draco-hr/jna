{
  reap();
  Set<Map.Entry<K,V>> ret=new LinkedHashSet<Map.Entry<K,V>>();
  for (  Map.Entry<? extends Reference<K>,? extends V> ref : backingStore.entrySet()) {
    final K key=ref.getKey().get();
    final V value=ref.getValue();
    Map.Entry<K,V> entry=new Map.Entry<K,V>(){
      @Override public K getKey(){
        return key;
      }
      @Override public V getValue(){
        return value;
      }
      @Override public V setValue(      V value){
        throw new UnsupportedOperationException();
      }
    }
;
    ret.add(entry);
  }
  return Collections.unmodifiableSet(ret);
}
